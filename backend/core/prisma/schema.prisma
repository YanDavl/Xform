generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URI")
}

model User {
  id String @id @default(uuid())

  email String @unique
  password String


  displayName String
  picture String?

  method AuthMethod

  role UserRole @default(REGULAR)

  accounts Account[]

  forms Form[]

  isVerified Boolean @default(false) @map("is_verified")
  isTwoFactorEnabled Boolean @default(false) @map("is_two_factor_enabled")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  @@map("users")
}

model Account {
  id String @id @default(uuid())

  refreshToken String? @map("refresh_token")
  accessToken String? @map("access_token")
  expiresAt Int @map("expires_at")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  user User? @relation(fields: [userId], references: [id])
  userId String? @map("user_id")

  @@map("accounts")
}

model Token {
  id String @id @default(uuid())

  email String
  token String @unique
  type TokenType
  expiresIn DateTime @map("expires_in")

  @@map("tokens")
} 

enum UserRole {
  REGULAR
  ADMIN
}

enum AuthMethod {
  CREDENTIALS
  GOOGLE
  YANDEX
}

enum TokenType {
  VERIFICATION
  TWO_FACTOR
  PASSWORD_RESET
}

model Form {
  user User @relation(fields: [userId], references: [id])
  userId String  @map("user_id")
  id        String   @id @default(uuid())
  formName  String?    @map("form_name")
  fields    Json?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  @@map("forms")
}

enum FieldType {
  TEXT
  NUMBER
  CHECKBOX
}