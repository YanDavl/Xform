version: "3.8"

services:
  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"     # S3 API
      - "9001:9001"     # Web UI
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    command: server --console-address ":9001" /data
    volumes:
      - minio_data:/data
    networks:
      - backend

  postgres:
    image: postgres:15.2
    container_name: postgres
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - 5433:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend

  redis:
    image: redis:5.0
    container_name: redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    restart: always
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data
    networks:
      - backend

  core:
    build:
      context: ./core
    container_name: core_container
    ports:
      - "4000:4000"
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    networks:
      - backend
    # command: sh -c "npx prisma migrate deploy && node dist/main"

  ai:
    build:
      context: ./ai
    container_name: ai_service
    ports:
      - "8080:8080"
    environment:
      - AUTH_VERIFY_URL=http://core:4000/auth/verify-session
      - OLLAMA_URL=http://ollama:11434
      - OLLAMA_MODEL=${OLLAMA_MODEL}
    depends_on:
      - core
      - ollama
    networks:
      - backend

  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama:/root/.ollama
    entrypoint: >
      bash -c "
        ollama serve & 
        sleep 3 &&
        ollama pull ${OLLAMA_MODEL} &&
        wait
      "
    environment:
      - OLLAMA_MODEL=${OLLAMA_MODEL}
    networks:
      - backend

volumes:
  postgres_data:
  redis_data:
  ollama:
  minio_data:


networks:
  backend:
